{"ast":null,"code":"import _asyncToGenerator from \"/Users/krishokr/CF_Projects/green-dragon-Angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { GenreComponent } from '../genre/genre.component';\nimport { DirectorComponent } from '../director/director.component';\nimport { SynopsisComponent } from '../synopsis/synopsis.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction MovieCardComponent_mat_card_1_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_1_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const movie_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.addFavoriteMovie(movie_r1._id);\n    });\n    i0.ɵɵtext(1, \" Add to Favorites \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MovieCardComponent_mat_card_1_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_1_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const movie_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.deleteFavoriteMovie(movie_r1._id);\n    });\n    i0.ɵɵtext(1, \" Delete Movie \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MovieCardComponent_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 2)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"img\", 3);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_1_Template_img_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.viewMovie(movie_r1.Title);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-card-actions\")(8, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_1_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.openGenreDialog(movie_r1.Genre);\n    });\n    i0.ɵɵtext(9, \" Genre \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_1_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.openDirectorDialog(movie_r1.Director);\n    });\n    i0.ɵɵtext(11, \" Director \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_1_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.openSynopsisDialog(movie_r1.Description);\n    });\n    i0.ɵɵtext(13, \" Synopsis \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, MovieCardComponent_mat_card_1_button_14_Template, 2, 0, \"button\", 5);\n    i0.ɵɵtemplate(15, MovieCardComponent_mat_card_1_button_15_Template, 2, 0, \"button\", 5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(movie_r1.Title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Directed by: \", movie_r1.Director.Name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"../assets/img/\", movie_r1.ImagePath, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", movie_r1.Title);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.user.FavoriteMovies.includes(movie_r1._id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user.FavoriteMovies.includes(movie_r1._id));\n  }\n}\n\nexport let MovieCardComponent = /*#__PURE__*/(() => {\n  class MovieCardComponent {\n    constructor(UserRegistration, router, dialog) {\n      this.UserRegistration = UserRegistration;\n      this.router = router;\n      this.dialog = dialog;\n      this.movies = [];\n      this.allMovies = [];\n      this.user = {};\n      this.userFavoriteMovies = {};\n      this.favoriteView = false;\n    }\n    /**\n     * component is used\n     */\n\n\n    ngOnInit() {\n      this.favoriteView ? this.populateFavoriteMoviesInMoviesArray() : this.initializeApp();\n    }\n\n    initializeApp() {\n      console.log('All movies view');\n      this.getMovies();\n      this.getUser();\n    }\n\n    determineInitialFavorites() {\n      console.log('inside determineFavorites');\n      console.log(this.user);\n      console.log(this.movies);\n      this.movies.forEach(movie => {\n        let id = movie._id;\n        this.user.FavoriteMovies.includes(id) ? this.userFavoriteMovies[id] = true : this.userFavoriteMovies = false;\n      });\n      console.log('User Favorite Movies: ');\n      console.log(Object.keys(this.userFavoriteMovies));\n    }\n\n    getMovies() {\n      this.UserRegistration.getAllMovies().subscribe(resp => {\n        if (this.favoriteView) {\n          console.log('populating movies with favorites...');\n          console.log(this.user.FavoriteMovies);\n          let collectFavorites = [];\n          this.user.FavoriteMovies.forEach(id => {\n            collectFavorites.push(resp.find(movie => movie._id === id));\n          });\n          this.movies = collectFavorites;\n          console.log(this.movies);\n        } else {\n          this.movies = resp;\n        }\n\n        console.log(this.movies);\n        return this.movies;\n      });\n    }\n\n    populateFavoriteMoviesInMoviesArray() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        console.log('Favorite movies');\n        yield _this.getUser();\n        yield _this.getMovies();\n      })();\n    }\n\n    openGenreDialog(genre) {\n      this.dialog.open(GenreComponent, {\n        width: '50vw',\n        data: genre\n      });\n    }\n\n    openDirectorDialog(director) {\n      this.dialog.open(DirectorComponent, {\n        width: '70vw',\n        data: director\n      });\n    }\n\n    openSynopsisDialog(description) {\n      this.dialog.open(SynopsisComponent, {\n        width: '70vw',\n        data: {\n          description\n        }\n      });\n    } // Adding a Favorite Movie\n\n\n    getUser() {\n      this.UserRegistration.getUser().subscribe(result => {\n        this.user = result;\n        console.log(this.user);\n      });\n    }\n\n    duplicateFavoriteMovie(id) {\n      this.getUser();\n\n      if (this.user.FavoriteMovies.includes(id)) {\n        return true;\n      }\n\n      return false;\n    }\n\n    addFavoriteMovie(id) {\n      if (!this.duplicateFavoriteMovie(id)) {\n        console.log(this.duplicateFavoriteMovie(id));\n        this.UserRegistration.addFavoriteMovie(id).subscribe(result => console.log(result));\n      } else {\n        // this.status = 'Duplicate movie cannot be added.'\n        console.log('Duplicate movie - cannot be added.');\n      }\n    }\n\n    viewMovie(title) {\n      this.router.navigate([`movies/${title}`]);\n    }\n\n    deleteFavoriteMovie(id) {\n      this.getUser();\n\n      if (this.user.FavoriteMovies.includes(id)) {\n        this.UserRegistration.deleteFavoriteMovie(id).subscribe(result => {\n          console.log(result);\n          console.log('Movie has been deleted');\n        });\n      }\n\n      this.getUser();\n    }\n\n  }\n\n  MovieCardComponent.ɵfac = function MovieCardComponent_Factory(t) {\n    return new (t || MovieCardComponent)(i0.ɵɵdirectiveInject(i1.UserRegistrationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  MovieCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MovieCardComponent,\n    selectors: [[\"app-movie-card\"]],\n    inputs: {\n      favoriteView: \"favoriteView\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"card-container\"], [\"style\", \"flex: 1 1 auto;\", 4, \"ngFor\", \"ngForOf\"], [2, \"flex\", \"1 1 auto\"], [1, \"movie-poster\", 3, \"src\", \"alt\", \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"]],\n    template: function MovieCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, MovieCardComponent_mat_card_1_Template, 16, 6, \"mat-card\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n      }\n    },\n    directives: [i4.NgForOf, i5.MatCard, i5.MatCardHeader, i5.MatCardTitle, i5.MatCardSubtitle, i5.MatCardActions, i6.MatButton, i4.NgIf],\n    styles: [\".card-container[_ngcontent-%COMP%]{width:90%;display:grid;grid-template-columns:1fr 1fr 1fr;margin-left:auto;margin-right:auto}mat-card[_ngcontent-%COMP%]{margin:5%}img[_ngcontent-%COMP%]{width:100%;transition:.5s}img[_ngcontent-%COMP%]:hover{cursor:pointer;opacity:.5}@media (max-width: 768px){.card-container[_ngcontent-%COMP%]{grid-template-columns:1fr 1fr}}@media (max-width: 425px){.card-container[_ngcontent-%COMP%]{grid-template-columns:1fr}}\"]\n  });\n  return MovieCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}